<?xml version="1.0"?>
<launch>
  <arg name='origin' default='-x 0 -y 0 -z 0.0'/>
  <arg name='robot_name' default='ur5'/>

  <!-- send robot urdf to param server -->
  <include file="$(find ur_e_description)/launch/ur5e_upload.launch">
    <arg name="limited" value="false"/>
  </include>

  <!-- push robot_description to factory and spawn robot in gazebo -->
  <node name="spawn_gazebo_model" pkg="gazebo_ros" type="spawn_model" args="-urdf -param robot_description -model $(arg robot_name) $(arg origin) -model $(arg robot_name) -J shoulder_lift_joint -1.5 -J elbow_joint 1.0 -J wrist_2_joint 1.57" respawn="false" output="screen" />

  <rosparam file="$(find ur_e_gazebo)/controller/ur5_controller_params_pid.yaml" command="load"/>
  <rosparam file="$(find ur_e_gazebo)/controller/gripper_controller_robotiq.yaml" command="load"/>

  <node name="$(arg robot_name)_controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="gripper shoulder_pan_joint_position_controller shoulder_lift_joint_position_controller elbow_joint_position_controller wrist_1_joint_position_controller wrist_2_joint_position_controller wrist_3_joint_position_controller joint_state_controller" />


  <node name="$(arg robot_name)_robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen"/>

  <node name="$(arg robot_name)_controller" pkg="nodes" type="controller.py" args="$(arg robot_name)" output="screen" />

</launch>
