<?xml version="1.0"?>
<launch>
    <arg name="limited" default="false"  doc="If true, limits joint range [-PI, PI] on all joints." />
    <arg name="paused" default="false" doc="Starts gazebo in paused mode" />
    <arg name="gui" default="true" doc="Starts gazebo gui" />
    <arg name="number" default="1"/>
    <arg name="name1" default="ur5_2" />
    <arg name="name2" default="ur5_1" />
    <arg name="origin1" default="-x -0.2 -y 0.8 -z 1.02"/>
    <arg name="origin2" default="-x -0.2 -y 0.1 -z 1.02"/>
    <arg name="grip1" default="3f"/>
    <arg name="grip2" default="3f" />
    <arg name="sim_gaz" default="true" />
    <arg name="real" default="false"/>
    <arg name="calibration_file1" default="/home/daniel/Desktop/calibration.yaml"/>
    <arg name="calibration_file2" default="/home/daniel/Desktop/calibration.yaml"/>
    <arg name="ip1" default="172.18.34.201"/>
    <arg name="ip2" default="172.18.34.200"/>


    <group if="$(eval arg('real'))">
        <group if="$(eval arg('number')==1)">
            <group ns='$(arg name1)'>
                <include file='$(find ur_robot_driver)/launch/ur5e_bringup.launch'>
                    <arg name="robot_ip" value="$(arg ip1)"/>
                    <arg name="kinematics_config" value='$(arg calibration_file1)'/>
                </include>
            </group>

            <group if="$(eval arg('grip1')=='2f_140')">
                <node name="gripper_1_2f" pkg="robotiq_2f_gripper_control" type="Robotiq2FGripperRtuNode.py" args="/dev/ttyUSB0" output="screen"/>
            </group>
            <group if="$(eval arg('grip1')=='3f')">
                <node name="gripper_1_3f" pkg="robotiq_3f_gripper_control" type="Robotiq3FGripperTcpNode.py" output="screen"/>
            </group>

            <node name="controller_1" pkg="nodes" type="ik.py" args="$(arg name1)" output="log"/>
            <node name="cart_pos_1" pkg="nodes" type="cart_pos.py" args="$(arg name1) $(arg grip1)" output="log"/>
            <node name="grip_controller_1" g="nodes" type="main_gripper_controller_real.py" args="$(arg name1) $(arg grip1)" output="screen"/>
        </group>

        <group if="$(eval arg('number')==2)">
            <group ns='$(arg name1)'>
                <include file='$(find ur_robot_driver)/launch/ur5e_bringup.launch'>
                    <arg name="robot_ip" value="$(arg ip1)"/>
                    <arg name="kinematics_config" value='$(arg calibration_file1)'/>
                </include>

                <group if="$(eval arg('grip1')=='2f_140')">
                    <node name="gripper_1_2f" pkg="robotiq_2f_gripper_control" type="Robotiq2FGripperRtuNode.py" args="/dev/ttyUSB0" output="screen"/>
                </group>
                <group if="$(eval arg('grip1')=='3f')">
                    <node name="gripper_1_3f" pkg="robotiq_3f_gripper_control" type="Robotiq3FGripperTcpNode.py" output="screen"/>
                </group>

                <node name="controller_1" pkg="nodes" type="ik.py" args="$(arg name1)" output="log"/>
                <node name="cart_pos_1" pkg="nodes" type="cart_pos.py" args="$(arg name1) $(arg grip1)" output="log"/>
                <node name="grip_controller_1" g="nodes" type="main_gripper_controller_real.py" args="$(arg name1) $(arg grip1)" output="screen"/>
            </group>
            <group ns='$(arg name2)'>
                <include file='$(find ur_robot_driver)/launch/ur5e_bringup.launch'>
                    <arg name="robot_ip" value="$(arg ip2)"/>
                    <arg name="kinematics_config" value='$(arg calibration_file2)'/>
                </include>

                <group if="$(eval arg('grip2')=='2f_140')">
                    <node name="gripper_2_2f" pkg="robotiq_2f_gripper_control" type="Robotiq2FGripperRtuNode.py" args="/dev/ttyUSB0" output="screen"/>
                </group>
                <group if="$(eval arg('grip2')=='3f')">
                    <node name="gripper_2_3f" pkg="robotiq_3f_gripper_control" type="Robotiq3FGripperTcpNode.py" output="screen"/>
                </group>

                <node name="controller_2" pkg="nodes" type="ik.py" args="$(arg name2)" output="log"/>
                <node name="cart_pos_2" pkg="nodes" type="cart_pos.py" args="$(arg name2) $(arg grip2)" output="log"/>
                <node name="grip_controller_2" g="nodes" type="main_gripper_controller_real.py" args="$(arg name2) $(arg grip2)" output="screen"/>
            </group>
        </group>
        
    </group>

    <!-- SIMULATION -->
    <group unless="$(eval arg('real'))">
        <include file="$(find nodes_one)/launch/cpp_launch.launch" pass_all_args="true"/>
    </group>

    <!-- phantom nodes -->
    <group if="$(eval arg('number')==1)">
        <node name="phantom" pkg="sensable_phantom_ros" type="sensable_phantom" args="-D -j $(find saw_sensable_phantom_config)/sawSensablePhantomUR5_1.json" output="log"> 
            <remap from="/ur5_2/servo_cf" to="/$(arg name1)/servo_cf"/>
            <remap from="/ur5_2/cart_pos" to="/$(arg name1)/cart_pos"/>
            <remap from="/ur5_2/button1" to="/$(arg name1)/button1" />
            <remap from="/ur5_2/button2" to="/$(arg name1)/button2" />

            <remap from="/ur5_2/body/servo_cf" to="/$(arg name1)/body/servo_cf"/>
            <remap from="/ur5_2/change" to="/$(arg name1)/change"/>
            <remap from="/ur5_2/error" to="/$(arg name1)/error"/>
            <remap from="/ur5_2/hold" to="/$(arg name1)/hold"/>
            <remap from="/ur5_2/measured_cf" to="/$(arg name1)/measured_cf"/>
            <remap from="/ur5_2/measured_cp" to="/$(arg name1)/measured_cp"/>
            <remap from="/ur5_2/measured_cv" to="/$(arg name1)/measured_cv"/>
            <remap from="/ur5_2/measured_js" to="/$(arg name1)/measured_js"/>
            <remap from="/ur5_2/move_cp" to="/$(arg name1)/move_cp"/>
            <remap from="/ur5_2/operating_state" to="/$(arg name1)/operating_state"/>
            <remap from="/ur5_2/servo_ci" to="/$(arg name1)/servo_ci"/>
            <remap from="/ur5_2/servo_cp" to="/$(arg name1)/servo_cp"/>
            <remap from="/ur5_2/setpoint_cp" to="/$(arg name1)/setpoint_cp"/>
            <remap from="/ur5_2/state_command" to="/$(arg name1)/state_command"/>
            <remap from="/ur5_2/status" to="/$(arg name1)/status"/>
            <remap from="/ur5_2/tip/measured_cp" to="/$(arg name1)/tip/measured_cp"/>
            <remap from="/ur5_2/use_gravity_compensation" to="/$(arg name1)/use_gravity_compensation"/>
            <remap from="/ur5_2/warning" to="/$(arg name1)/warning"/>
        </node>

    </group>

    <group if="$(eval arg('number')==2)">
        <node name="phantom" pkg="sensable_phantom_ros" type="sensable_phantom" args="-D -j $(find saw_sensable_phantom_config)/sawSensablePhantomUR5.json" output="log"> 
            <remap from="/ur5_2/servo_cf" to="/$(arg name1)/servo_cf"/>
            <remap from="/ur5_2/cart_pos" to="/$(arg name1)/cart_pos"/>
            <remap from="/ur5_2/button1" to="/$(arg name1)/button1" />
            <remap from="/ur5_2/button2" to="/$(arg name1)/button2" />

            <remap from="/ur5_2/body/servo_cf" to="/$(arg name1)/body/servo_cf"/>
            <remap from="/ur5_2/change" to="/$(arg name1)/change"/>
            <remap from="/ur5_2/error" to="/$(arg name1)/error"/>
            <remap from="/ur5_2/hold" to="/$(arg name1)/hold"/>
            <remap from="/ur5_2/measured_cf" to="/$(arg name1)/measured_cf"/>
            <remap from="/ur5_2/measured_cp" to="/$(arg name1)/measured_cp"/>
            <remap from="/ur5_2/measured_cv" to="/$(arg name1)/measured_cv"/>
            <remap from="/ur5_2/measured_js" to="/$(arg name1)/measured_js"/>
            <remap from="/ur5_2/move_cp" to="/$(arg name1)/move_cp"/>
            <remap from="/ur5_2/operating_state" to="/$(arg name1)/operating_state"/>
            <remap from="/ur5_2/servo_ci" to="/$(arg name1)/servo_ci"/>
            <remap from="/ur5_2/servo_cp" to="/$(arg name1)/servo_cp"/>
            <remap from="/ur5_2/setpoint_cp" to="/$(arg name1)/setpoint_cp"/>
            <remap from="/ur5_2/state_command" to="/$(arg name1)/state_command"/>
            <remap from="/ur5_2/status" to="/$(arg name1)/status"/>
            <remap from="/ur5_2/tip/measured_cp" to="/$(arg name1)/tip/measured_cp"/>
            <remap from="/ur5_2/use_gravity_compensation" to="/$(arg name1)/use_gravity_compensation"/>
            <remap from="/ur5_2/warning" to="/$(arg name1)/warning"/>


            <remap from="/ur5_1/servo_cf" to="/$(arg name2)/servo_cf"/>
            <remap from="/ur5_1/cart_pos" to="/$(arg name2)/cart_pos"/>
            <remap from="/ur5_1/button1" to="/$(arg name2)/button1" />
            <remap from="/ur5_1/button2" to="/$(arg name2)/button2" />
            <remap from="/ur5_1/body/servo_cf" to="/$(arg name2)/body/servo_cf"/>
            <remap from="/ur5_1/change" to="/$(arg name2)/change"/>
            <remap from="/ur5_1/error" to="/$(arg name2)/error"/>
            <remap from="/ur5_1/hold" to="/$(arg name2)/hold"/>
            <remap from="/ur5_1/measured_cf" to="/$(arg name2)/measured_cf"/>
            <remap from="/ur5_1/measured_cp" to="/$(arg name2)/measured_cp"/>
            <remap from="/ur5_1/measured_cv" to="/$(arg name2)/measured_cv"/>
            <remap from="/ur5_1/measured_js" to="/$(arg name2)/measured_js"/>
            <remap from="/ur5_1/move_cp" to="/$(arg name2)/move_cp"/>
            <remap from="/ur5_1/operating_state" to="/$(arg name2)/operating_state"/>
            <remap from="/ur5_1/servo_ci" to="/$(arg name2)/servo_ci"/>
            <remap from="/ur5_1/servo_cp" to="/$(arg name2)/servo_cp"/>
            <remap from="/ur5_1/setpoint_cp" to="/$(arg name2)/setpoint_cp"/>
            <remap from="/ur5_1/state_command" to="/$(arg name2)/state_command"/>
            <remap from="/ur5_1/status" to="/$(arg name2)/status"/>
            <remap from="/ur5_1/tip/measured_cp" to="/$(arg name2)/tip/measured_cp"/>
            <remap from="/ur5_1/use_gravity_compensation" to="/$(arg name2)/use_gravity_compensation"/>
            <remap from="/ur5_1/warning" to="/$(arg name2)/warning"/>
        </node>
    </group>
    
</launch>